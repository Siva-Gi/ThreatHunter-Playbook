title: Wuauclt CreateRemoteThread Execution
id: WIN-201012183248
collaborators:
  - '@Cyb3rWard0g'
playbooks_related:
creation_date: 2020/10/12
modification_date: 2020/10/12
platform: Windows
attack_mappings:
  - tactics:
      - TA0005
    technique: T1218
    sub-technique:
hypothesis: Adversaries might be proxy executing code via the Windows Update client utility in my environment and creating and running a thread in the virtual address space of another process via the CreateRemoteThread API to bypass rules looking for it calling out to the Internet.
technical_context: |-
  The Windows Update client (wuauclt.exe) utility allows you some control over the functioning of the Windows Update Agent.
offensive_tradecraft: |-
  Adversaries can leverage this utility to proxy the execution of code by specifying an arbitrary DLL with the following command line `wuauclt.exe /UpdateDeploymentProvider <Full_Path_To_DLL> /RunHandlerComServer`
test_data:
  metadata: https://mordordatasets.com/notebooks/small/windows/05_defense_evasion/SDWIN-201012183248.html
  link: https://raw.githubusercontent.com/OTRF/mordor/master/datasets/small/windows/defense_evasion/host/covenant_lolbin_wuauclt_createremotethread.zip
analytics:
  - name: Analytic I
    description: Look for wuauclt with the specific parameters used to load and execute a DLL.
    data_sources:
      - name: Process
        event_providers:
        - name: Microsoft-Windows-Sysmon/Operational
          data_model:
            - relationship: Process created Process
              id: DE5A1D57-9569-4BA7-B2DC-27760F999A9A
              event_id: 1
    logic: |-
      SELECT `@timestamp`, Hostname, Image, CommandLine
      FROM mordorTable
      WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
          AND EventID = 1
          AND Image LIKE '%wuauclt.exe'
          AND CommandLine LIKE '%wuauclt%UpdateDeploymentProvider%.dll%RunHandlerComServer'
  - name: Analytic II
    description: Look for unsigned DLLs being loaded by wuauclt. You might have to stack the results and find potential anomalies over time.
    data_sources:
      - name: Module
        event_providers:
        - name: Microsoft-Windows-Sysmon/Operational
          data_model:
            - relationship: Process loaded DLL
              id: 109A870F-84A2-4CE4-948A-4773CD283F76
              event_id: 7
    logic: |-
      SELECT `@timestamp`, Hostname, Image, ImageLoaded
      FROM mordorTable
      WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
          AND EventID = 7
          AND Image LIKE '%wuauclt.exe'
          AND Signed = 'false'
  - name: Analytic III
    description: Look for wuauclt creating and running a thread in the virtual address space of another process via the CreateRemoteThread API.
    data_sources:
      - name: Process
        event_providers:
        - name: Microsoft-Windows-Sysmon/Operational
          data_model:
            - relationship: Process wrote_to Process
              id: B4D84249-7408-49C3-AC5A-99F3FAED83FC
              event_id: 8
    logic: |-
      SELECT `@timestamp`, Hostname, TargetImage
      FROM mordorTable
      WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
          AND EventID = 8
          AND SourceImage LIKE '%wuauclt.exe'
  - name: Analytic IV
    description: Look for recent files created being loaded by wuauclt.
    data_sources:
      - name: File
        event_providers:
        - name: Microsoft-Windows-Sysmon/Operational
          data_model:
            - relationship: Process created File
              id: 109A870F-84A2-4CE4-948A-4773CD283F76
              event_id: 11
            - relationship: Process loaded DLL
              id: 109A870F-84A2-4CE4-948A-4773CD283F76
              event_id: 7
    logic: |-
      SELECT `@timestamp`, Hostname, ImageLoaded
      FROM mordorTable b
      INNER JOIN (
          SELECT TargetFilename, ProcessGuid
          FROM mordorTable
          WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
              AND EventID = 11
          ) a
      ON b.ImageLoaded = a.TargetFilename
      WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
        AND EventID = 7
        AND Image LIKE '%wuauclt.exe'
  - name: Analytic V
    description: Look for wuauclt loading recently created DLLs and writing to another process
    data_sources:
      - name: Module
        event_providers:
        - name: Microsoft-Windows-Sysmon/Operational
          data_model:
            - relationship: Process created File
              id: 109A870F-84A2-4CE4-948A-4773CD283F76
              event_id: 11
            - relationship: Process loaded DLL
              id: 109A870F-84A2-4CE4-948A-4773CD283F76
              event_id: 7
            - relationship: Process wrote_to Process
              id: B4D84249-7408-49C3-AC5A-99F3FAED83FC
              event_id: 8
    logic: |-
      SELECT `@timestamp`, Hostname, d.TargetImage, c.ImageLoaded
      FROM mordorTable d
      INNER JOIN (
          SELECT b.ProcessGuid, b.ImageLoaded
          FROM mordorTable b
          INNER JOIN (
            SELECT TargetFilename, ProcessGuid
            FROM mordorTable
            WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
                AND EventID = 11
          ) a
          ON b.ImageLoaded = a.TargetFilename
          WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
            AND EventID = 7
            AND Image LIKE '%wuauclt.exe'
      ) c
      ON d.SourceProcessGuid = c.ProcessGuid
      WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
            AND EventID = 8
            AND SourceImage LIKE '%wuauclt.exe'
known_bypasses:
false_positives:
additional_notes: |-
  * Baseline your environment to identify normal activity from wuauclt. You will have to do some stacking on images loaded by wuauclt (Split it on signed and un-signed (if applicable))
research_output:
  - type: Sigma Rule
    link: https://github.com/Neo23x0/sigma/blob/2cb540f95ed2d02f7d8a2bf84d9bf4a5962f156d/rules/windows/process_creation/sysmon_proxy_execution_wuauclt.yml
  - type: Sigma Rule
    link: https://github.com/OTRF/ThreatHunter-Playbook/blob/master/signatures/sigma/sysmon_proxy_execution_wuauclt_createremotethread.yml
references: |-
  * https://dtm.uk/wuauclt/
  * https://docs.microsoft.com/zh-cn/security-updates/windowsupdateservices/21740782
  * https://github.com/Neo23x0/sigma/blob/2cb540f95ed2d02f7d8a2bf84d9bf4a5962f156d/rules/windows/process_creation/sysmon_proxy_execution_wuauclt.yml
