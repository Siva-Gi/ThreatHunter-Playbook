title: SMB Create Remote File
id: WIN-201012004336
collaborators:
  - '@Cyb3rWard0g'
  - '@Cyb3rPandaH'
playbooks_related:
creation_date: 2020/10/12
modification_date: 2020/10/12
platform: Windows
attack_mappings:
  - tactics:
      - TA0008
    technique: T1021
    sub-technique: "002"
hypothesis: Adversaries might be creating a file remotely via the Server Message Block (SMB) Protocol.
technical_context: |-
  Client systems use the Common Internet File System (CIFS) Protocol to request file and print services from server systems over a network. CIFS is a stateful protocol, in which clients establish a session with a server and use that session to make a variety of requests to access files, printers, and inter-process communication (IPC) mechanisms, such as named pipes.
  The extended CIFS Protocol is known as the Server Message Block (SMB). The SMB2 CREATE Request packet is sent by a client to request either creation of or access to a file. In case of a named pipe or printer, the server MUST create a new file.
offensive_tradecraft: |-
  Adversaries leverage SMB to copy files over the network to either execute code remotely or exfiltrate data.
test_data:
  metadata: https://mordordatasets.com/notebooks/small/windows/08_lateral_movement/SDWIN-200806015757.html
  link: https://raw.githubusercontent.com/OTRF/mordor/master/datasets/small/windows/lateral_movement/host/covenant_copy_smb_CreateRequest.zip
analytics:
  - name: Analytic I
    description: Look for non-system accounts SMB connecting (Tree Connect) to a file share that is not IPC$.
    data_sources:
      - name: File
        event_providers:
        - name: Microsoft-Windows-Security-Auditing
          data_model:
            - relationship: User accessed file share
              id: 53DE6467-D39D-434B-9EF7-69C7F4098DF9
              event_id: 5140
    logic: |-
      SELECT `@timestamp`, Hostname, ShareName, SubjectUserName, SubjectLogonId,  AccessMask
      FROM mordorTable
      WHERE LOWER(Channel) = 'security'
          AND (EventID = 5140)
          AND NOT ShareName LIKE '%IPC$'
          AND NOT SubjectUserName LIKE '%$'
  - name: Analytic II
    description: Look for non-system accounts SMB connecting (Tree Connect) to an IPC$ Share and administrative shares (i.e C$) with the same logon session ID.
    data_sources:
      - name: File
        event_providers:
        - name: Microsoft-Windows-Security-Auditing
          data_model:
            - relationship: User accessed file share
              id: 53DE6467-D39D-434B-9EF7-69C7F4098DF9
              event_id: 5140
    logic: |-
      SELECT `@timestamp`, Hostname, ShareName, SubjectUserName, b.SubjectLogonId, IpAddress, IpPort
      FROM mordorTable b
      INNER JOIN (
          SELECT SubjectLogonId
          FROM mordorTable
          WHERE LOWER(Channel) = "security"
              AND EventID = 5140
              AND ShareName LIKE '%IPC$'
              AND NOT SubjectUserName LIKE '%$'
          ) a
      ON b.SubjectLogonId = a.SubjectLogonId
      WHERE LOWER(b.Channel) = 'security'
          AND b.EventID = 5140
          AND b.ShareName LIKE '%C$'
          AND NOT SubjectUserName LIKE '%$'
  - name: Analytic III
    description: Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$).
    data_sources:
      - name: File
        event_providers:
        - name: Microsoft-Windows-Security-Auditing
          data_model:
            - relationship: User accessed File
              id: 2A9FC474-29C0-4582-9DA8-1F4197874F8C
              event_id: 5145
    logic: |-
      SELECT `@timestamp`, Hostname, ShareName, SubjectUserName, SubjectLogonId, IpAddress, IpPort, RelativeTargetName
      FROM mordorTable
      WHERE LOWER(Channel) = "security"
          AND EventID = 5145
          AND ShareName LIKE '%C$'
          AND NOT SubjectUserName LIKE '%$'
          AND AccessMask = '0x2'
  - name: Analytic IV
    description: Look for non-system accounts SMB connecting (Tree Connect) to an IPC$ Share and administrative shares (i.e C$) and accessing/creating a file with write (0x2) access mask with the same logon session ID.
    data_sources:
      - name: File
        event_providers:
        - name: Microsoft-Windows-Security-Auditing
          data_model:
            - relationship: User accessed file share
              id: 53DE6467-D39D-434B-9EF7-69C7F4098DF9
              event_id: 5140 
            - relationship: User accessed File
              id: 2A9FC474-29C0-4582-9DA8-1F4197874F8C
              event_id: 5145
    logic: |-
      SELECT `@timestamp`, Hostname, ShareName, SubjectUserName, d.SubjectLogonId, IpAddress, IpPort, RelativeTargetName
      FROM mordorTable d
      INNER JOIN (
          SELECT b.SubjectLogonId
          FROM mordorTable b
          INNER JOIN (
              SELECT SubjectLogonId
              FROM mordorTable
              WHERE LOWER(Channel) = "security"
                  AND EventID = 5140
                  AND ShareName LIKE '%IPC$'
                  AND NOT SubjectUserName LIKE '%$'
          ) a
          ON b.SubjectLogonId = a.SubjectLogonId
          WHERE LOWER(b.Channel) = 'security'
              AND b.EventID = 5140
              AND b.ShareName LIKE '%C$'
      ) c
      ON d.SubjectLogonId = c.SubjectLogonId
      WHERE LOWER(d.Channel) = 'security'
          AND d.EventID = 5145
          AND d.ShareName LIKE '%C$'
          AND d.AccessMask = '0x2'
  - name: Analytic V
    description: Look for files that were accessed over the network with write (0x2) access mask via administrative shares (i.e C$) and that were created by the System process on the target system.
    data_sources:
      - name: File
        event_providers:
        - name: Microsoft-Windows-Security-Auditing
          data_model:
            - relationship: User accessed File
              id: 2A9FC474-29C0-4582-9DA8-1F4197874F8C
              event_id: 5145
        - name: Microsoft-Windows-Sysmon/Operational
          data_model:
            - relationship: Process created File
              id: 109A870F-84A2-4CE4-948A-4773CD283F76
              event_id: 11
    logic: |-
      SELECT `@timestamp`, Hostname, ShareName, SubjectUserName, SubjectLogonId, IpAddress, IpPort, RelativeTargetName
      FROM mordorTable b
      INNER JOIN (
          SELECT LOWER(REVERSE(SPLIT(TargetFilename, '\'))[0]) as TargetFilename
          FROM mordorTable
          WHERE Channel = 'Microsoft-Windows-Sysmon/Operational'
              AND Image = 'System'
              AND EventID = 11
      ) a
      ON LOWER(REVERSE(SPLIT(RelativeTargetName, '\'))[0]) = a.TargetFilename
      WHERE LOWER(b.Channel) = 'security'
          AND b.EventID = 5145
          AND b.AccessMask = '0x2'
known_bypasses:
false_positives:
additional_notes: |-
  * Baseline your environment to identify normal activity. Document all accounts creating files over the network via administrative shares.
research_output:
references: |-
  * https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-smb/8341356c-ede3-4e1c-a056-3de91473bde6
  * https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-smb2/e8fb45c1-a03d-44ca-b7ae-47385cfd7997
