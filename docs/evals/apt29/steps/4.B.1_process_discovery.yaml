vendor: OTR Community
step: 4.B.1
procedure: Enumerated current running processes using PowerShell
criteria: powershell.exe executing Get-Process
technique:
  name: Process Discovery
  id: T1057
issue: https://github.com/OTRF/detection-hackathon-apt29/issues/9
detections:
  - main_type: Telemetry
    modifier_type: Correlated
    description: Telemetry showed powershell.exe executing Get-Process. The event was correlated to a parent alert for Bypass User Account Control of control.exe spawning powershell.exe.
    reference:
    queries:
      - id: CE6D61C3-C3B5-43D2-BD3C-4C1711A822DA
        data_sources:
          - event_provider: Microsoft-Windows-Sysmon/Operational
            event_logs:
              - 1
          - event_provider: Microsoft-Windows-PowerShell/Operational
            event_logs:
              - 4104
        rule_contribution:
        logic: |
          SELECT Message
          FROM apt29Host f
          INNER JOIN (
              SELECT d.ProcessId
              FROM apt29Host d
              INNER JOIN (
                SELECT a.ProcessGuid, a.ParentProcessGuid
                FROM apt29Host a
                INNER JOIN (
                  SELECT ProcessGuid
                  FROM apt29Host
                  WHERE Channel = "Microsoft-Windows-Sysmon/Operational"
                      AND EventID = 1
                      AND LOWER(Image) LIKE "%control.exe"
                      AND LOWER(ParentImage) LIKE "%sdclt.exe"
                ) b
                ON a.ParentProcessGuid = b.ProcessGuid
                WHERE a.Channel = "Microsoft-Windows-Sysmon/Operational"
                  AND a.EventID = 1
                  AND a.IntegrityLevel = "High"
              ) c
              ON d.ParentProcessGuid= c.ProcessGuid
              WHERE d.Channel = "Microsoft-Windows-Sysmon/Operational"
                AND d.EventID = 1
                AND d.Image LIKE '%powershell.exe'
          ) e
          ON f.ExecutionProcessID = e.ProcessId
          WHERE f.Channel = "Microsoft-Windows-PowerShell/Operational"
              AND f.EventID = 4104
              AND LOWER(f.ScriptBlockText) LIKE "%get-process%"
        output: |
          Creating Scriptblock text (1 of 1):
          get-process
          
          ScriptBlock ID: 66a7f650-8a84-4dcf-a0f7-41d06de51f5c
      - id: 294DFB34-1FA8-464D-B85C-F2AE163DB4A9
        data_sources:
          - event_provider: Security
            event_logs:
              - 1
          - event_provider: Microsoft-Windows-PowerShell/Operational
            event_logs:
              - 4104
        rule_contribution:
        logic: |
          SELECT Message
          FROM apt29Host f
          INNER JOIN (
              SELECT split(d.NewProcessId, '0x')[1] as NewProcessId
              FROM apt29Host d
              INNER JOIN(
                SELECT a.ProcessId, a.NewProcessId
                FROM apt29Host a
                INNER JOIN (
                  SELECT NewProcessId
                  FROM apt29Host
                  WHERE LOWER(Channel) = "security"
                      AND EventID = 4688
                      AND LOWER(NewProcessName) LIKE "%control.exe"
                      AND LOWER(ParentProcessName) LIKE "%sdclt.exe"
                ) b
                ON a.ProcessId = b.NewProcessId
                WHERE LOWER(a.Channel) = "security"
                  AND a.EventID = 4688
                  AND a.MandatoryLabel = "S-1-16-12288"
                  AND a.TokenElevationType = "%%1937"
              ) c
              ON d.ProcessId = c.NewProcessId
              WHERE LOWER(d.Channel) = "security"
                AND d.EventID = 4688
                AND d.NewProcessName LIKE '%powershell.exe'
          ) e
          ON LOWER(hex(f.ExecutionProcessID)) = e.NewProcessId
          WHERE f.Channel = "Microsoft-Windows-PowerShell/Operational"
              AND f.EventID = 4104
              AND LOWER(f.ScriptBlockText) LIKE "%get-process%"
        output: |
          Creating Scriptblock text (1 of 1):
          get-process
          
          ScriptBlock ID: 66a7f650-8a84-4dcf-a0f7-41d06de51f5c
